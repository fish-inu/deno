# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-11-23 14:22+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: docs/examples/manage_dependencies.md:2
msgid "# Managing dependencies"
msgstr ""

#. type: Plain text
#: docs/examples/manage_dependencies.md:4
msgid "## Concepts"
msgstr ""

#. type: Bullet: '- '
#: docs/examples/manage_dependencies.md:11
#, markdown-text
msgid "Deno uses URLs for dependency management."
msgstr ""

#. type: Bullet: '- '
#: docs/examples/manage_dependencies.md:11
#, markdown-text
msgid ""
"One convention places all these dependent URLs into a local `deps.ts` file.  "
"Functionality is then exported out of `deps.ts` for use by local modules."
msgstr ""

#. type: Bullet: '- '
#: docs/examples/manage_dependencies.md:11
#, markdown-text
msgid ""
"Continuing this convention, dev only dependencies can be kept in a "
"`dev_deps.ts` file."
msgstr ""

#. type: Bullet: '- '
#: docs/examples/manage_dependencies.md:11
#, markdown-text
msgid "See also [Linking to external code](../linking_to_external_code.md)"
msgstr ""

#. type: Plain text
#: docs/examples/manage_dependencies.md:13
msgid "## Overview"
msgstr ""

#. type: Plain text
#: docs/examples/manage_dependencies.md:19
msgid ""
"In Deno there is no concept of a package manager as external modules are "
"imported directly into local modules. This raises the question of how to "
"manage remote dependencies without a package manager. In big projects with "
"many dependencies it will become cumbersome and time consuming to update "
"modules if they are all imported individually into individual modules."
msgstr ""

#. type: Plain text
#: docs/examples/manage_dependencies.md:27
msgid ""
"The standard practice for solving this problem in Deno is to create a "
"`deps.ts` file. All required remote dependencies are referenced in this file "
"and the required methods and classes are re-exported. The dependent local "
"modules then reference the `deps.ts` rather than the remote dependencies. If "
"now for example one remote dependency is used in several files, upgrading to "
"a new version of this remote dependency is much simpler as this can be done "
"just within `deps.ts`."
msgstr ""

#. type: Plain text
#: docs/examples/manage_dependencies.md:31
msgid ""
"With all dependencies centralized in `deps.ts`, managing these becomes "
"easier.  Dev dependencies can also be managed in a separate `dev_deps.ts` "
"file, allowing clean separation between dev only and production "
"dependencies."
msgstr ""

#. type: Plain text
#: docs/examples/manage_dependencies.md:33
msgid "## Example"
msgstr ""

#. type: Plain text
#: docs/examples/manage_dependencies.md:45
#, no-wrap
msgid ""
"```ts\n"
"/**\n"
" * deps.ts\n"
" *\n"
" * This module re-exports the required methods from the dependant remote "
"Ramda module.\n"
" **/\n"
"export {\n"
"  add,\n"
"  multiply,\n"
"} from \"https://x.nest.land/ramda@0.27.0/source/index.js\";\n"
"```\n"
msgstr ""

#. type: Plain text
#: docs/examples/manage_dependencies.md:50
msgid ""
"In this example the same functionality is created as is the case in the "
"[local and remote import examples](./import_export.md). But in this case "
"instead of the Ramda module being referenced directly it is referenced by "
"proxy using a local `deps.ts` module."
msgstr ""

#. type: Plain text
#: docs/examples/manage_dependencies.md:52
#, no-wrap
msgid "**Command:** `deno run example.ts`\n"
msgstr ""

#. type: Plain text
#: docs/examples/manage_dependencies.md:57
#, no-wrap
msgid ""
"```ts\n"
"/**\n"
" * example.ts\n"
" */\n"
msgstr ""

#. type: Plain text
#: docs/examples/manage_dependencies.md:59
msgid "import { add, multiply } from \"./deps.ts\";"
msgstr ""

#. type: Plain text
#: docs/examples/manage_dependencies.md:63
#, no-wrap
msgid ""
"function totalCost(outbound: number, inbound: number, tax: number): number "
"{\n"
"  return multiply(add(outbound, inbound), tax);\n"
"}\n"
msgstr ""

#. type: Plain text
#: docs/examples/manage_dependencies.md:66
msgid "console.log(totalCost(19, 31, 1.2)); console.log(totalCost(45, 27, 1.15));"
msgstr ""

#. type: Plain text
#: docs/examples/manage_dependencies.md:73
#, no-wrap
msgid ""
"/**\n"
" * Output\n"
" *\n"
" * 60\n"
" * 82.8\n"
" */\n"
"```\n"
msgstr ""
