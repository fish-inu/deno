# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-11-25 21:33+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/examples/hello_world.md:1
#, markdown-text, no-wrap
msgid "Hello world"
msgstr ""

#. type: Title ##
#: docs/examples/hello_world.md:3
#, markdown-text, no-wrap
msgid "Concepts"
msgstr ""

#. type: Bullet: '- '
#: docs/examples/hello_world.md:7
#, markdown-text
msgid ""
"Deno can run JavaScript or TypeScript out of the box with no additional "
"tools or config required."
msgstr ""

#. type: Title ##
#: docs/examples/hello_world.md:8
#, markdown-text, no-wrap
msgid "Overview"
msgstr ""

#. type: Plain text
#: docs/examples/hello_world.md:13
#, markdown-text
msgid ""
"Deno is a secure runtime for both JavaScript and TypeScript. As the hello "
"world examples below highlight the same functionality can be created in "
"JavaScript or TypeScript, and Deno will execute both."
msgstr ""

#. type: Title ##
#: docs/examples/hello_world.md:14
#, markdown-text, no-wrap
msgid "JavaScript"
msgstr ""

#. type: Plain text
#: docs/examples/hello_world.md:18
#, markdown-text
msgid ""
"In this JavaScript example the message `Hello [name]` is printed to the "
"console and the code ensures the name provided is capitalized."
msgstr ""

#. type: Plain text
#: docs/examples/hello_world.md:20
#, markdown-text, no-wrap
msgid "**Command:** `deno run hello-world.js`\n"
msgstr ""

#. type: Fenced code block (js)
#: docs/examples/hello_world.md:21
#, no-wrap
msgid ""
"/**\n"
" * hello-world.js\n"
" */\n"
"function capitalize(word) {\n"
"  return word.charAt(0).toUpperCase() + word.slice(1);\n"
"}\n"
"\n"
"function hello(name) {\n"
"  return \"Hello \" + capitalize(name);\n"
"}\n"
"\n"
"console.log(hello(\"john\"));\n"
"console.log(hello(\"Sarah\"));\n"
"console.log(hello(\"kai\"));\n"
"\n"
"/**\n"
" * Output:\n"
" *\n"
" * Hello John\n"
" * Hello Sarah\n"
" * Hello Kai\n"
"**/\n"
msgstr ""

#. type: Title ##
#: docs/examples/hello_world.md:46
#, markdown-text, no-wrap
msgid "TypeScript"
msgstr ""

#. type: Plain text
#: docs/examples/hello_world.md:50
#, markdown-text
msgid ""
"This TypeScript example is exactly the same as the JavaScript example above, "
"the code just has the additional type information which TypeScript supports."
msgstr ""

#. type: Plain text
#: docs/examples/hello_world.md:53
#, markdown-text
msgid ""
"The `deno run` command is exactly the same, it just references a `*.ts` file "
"rather than a `*.js` file."
msgstr ""

#. type: Plain text
#: docs/examples/hello_world.md:55
#, markdown-text, no-wrap
msgid "**Command:** `deno run hello-world.ts`\n"
msgstr ""

#. type: Fenced code block (ts)
#: docs/examples/hello_world.md:56
#, no-wrap
msgid ""
"/**\n"
" * hello-world.ts\n"
" */\n"
"function capitalize(word: string): string {\n"
"  return word.charAt(0).toUpperCase() + word.slice(1);\n"
"}\n"
"\n"
"function hello(name: string): string {\n"
"  return \"Hello \" + capitalize(name);\n"
"}\n"
"\n"
"console.log(hello(\"john\"));\n"
"console.log(hello(\"Sarah\"));\n"
"console.log(hello(\"kai\"));\n"
"\n"
"/**\n"
" * Output:\n"
" *\n"
" * Hello John\n"
" * Hello Sarah\n"
" * Hello Kai\n"
"**/\n"
msgstr ""
