# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-11-25 21:33+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title #
#: docs/examples/subprocess.md:1
#, no-wrap
msgid "Creating a subprocess"
msgstr ""

#. type: Title ##
#: docs/examples/subprocess.md:3
#, no-wrap
msgid "Concepts"
msgstr ""

#. type: Bullet: '- '
#: docs/examples/subprocess.md:15
msgid ""
"Deno is capable of spawning a subprocess via [Deno.run](https://doc.deno."
"land/builtin/stable#Deno.run)."
msgstr ""

#. type: Bullet: '- '
#: docs/examples/subprocess.md:15
msgid "`--allow-run` permission is required to spawn a subprocess."
msgstr ""

#. type: Bullet: '- '
#: docs/examples/subprocess.md:15
msgid "Spawned subprocesses do not run in a security sandbox."
msgstr ""

#. type: Bullet: '- '
#: docs/examples/subprocess.md:15
msgid ""
"Communicate with the subprocess via the [stdin](https://doc.deno.land/"
"builtin/stable#Deno.stdin), [stdout](https://doc.deno.land/builtin/"
"stable#Deno.stdout) and [stderr](https://doc.deno.land/builtin/stable#Deno."
"stderr) streams."
msgstr ""

#. type: Bullet: '- '
#: docs/examples/subprocess.md:15
msgid ""
"Use a specific shell by providing its path/name and its string input switch, "
"e.g. `Deno.run({cmd: [\"bash\", \"-c\", '\"ls -la\"']});`"
msgstr ""

#. type: Title ##
#: docs/examples/subprocess.md:16
#, no-wrap
msgid "Simple example"
msgstr ""

#. type: Plain text
#: docs/examples/subprocess.md:19
msgid ""
"This example is the equivalent of running `'echo hello'` from the command "
"line."
msgstr ""

#. type: Fenced code block (ts)
#: docs/examples/subprocess.md:20
#, no-wrap
msgid ""
"/**\n"
" * subprocess_simple.ts\n"
" */\n"
"\n"
"// create subprocess\n"
"const p = Deno.run({\n"
"  cmd: [\"echo\", \"hello\"],\n"
"});\n"
"\n"
"// await its completion\n"
"await p.status();\n"
msgstr ""

#. type: Plain text
#: docs/examples/subprocess.md:35
msgid "Run it:"
msgstr ""

#. type: Fenced code block (shell)
#: docs/examples/subprocess.md:36
#, no-wrap
msgid ""
"$ deno run --allow-run ./subprocess_simple.ts\n"
"hello\n"
msgstr ""

#. type: Title ##
#: docs/examples/subprocess.md:41
#, no-wrap
msgid "Security"
msgstr ""

#. type: Plain text
#: docs/examples/subprocess.md:46
msgid ""
"The `--allow-run` permission is required for creation of a subprocess. Be "
"aware that subprocesses are not run in a Deno sandbox and therefore have the "
"same permissions as if you were to run the command from the command line "
"yourself."
msgstr ""

#. type: Title ##
#: docs/examples/subprocess.md:47
#, no-wrap
msgid "Communicating with subprocesses"
msgstr ""

#. type: Plain text
#: docs/examples/subprocess.md:52
msgid ""
"By default when you use `Deno.run()` the subprocess inherits `stdin`, "
"`stdout` and `stderr` of the parent process. If you want to communicate with "
"started subprocess you can use `\"piped\"` option."
msgstr ""

#. type: Fenced code block (ts)
#: docs/examples/subprocess.md:53
#, no-wrap
msgid ""
"/**\n"
" * subprocess.ts\n"
" */\n"
"const fileNames = Deno.args;\n"
"\n"
"const p = Deno.run({\n"
"  cmd: [\n"
"    \"deno\",\n"
"    \"run\",\n"
"    \"--allow-read\",\n"
"    \"https://deno.land/std@$STD_VERSION/examples/cat.ts\",\n"
"    ...fileNames,\n"
"  ],\n"
"  stdout: \"piped\",\n"
"  stderr: \"piped\",\n"
"});\n"
"\n"
"const { code } = await p.status();\n"
"\n"
"if (code === 0) {\n"
"  const rawOutput = await p.output();\n"
"  await Deno.stdout.write(rawOutput);\n"
"} else {\n"
"  const rawError = await p.stderrOutput();\n"
"  const errorString = new TextDecoder().decode(rawError);\n"
"  console.log(errorString);\n"
"}\n"
"\n"
"Deno.exit(code);\n"
msgstr ""

#. type: Plain text
#: docs/examples/subprocess.md:86
msgid "When you run it:"
msgstr ""

#. type: Fenced code block (shell)
#: docs/examples/subprocess.md:87
#, no-wrap
msgid ""
"$ deno run --allow-run ./subprocess.ts <somefile>\n"
"[file content]\n"
"\n"
"$ deno run --allow-run ./subprocess.ts non_existent_file.md\n"
"\n"
"Uncaught NotFound: No such file or directory (os error 2)\n"
"    at DenoError (deno/js/errors.ts:22:5)\n"
"    at maybeError (deno/js/errors.ts:41:12)\n"
"    at handleAsyncMsgFromRust (deno/js/dispatch.ts:27:17)\n"
msgstr ""
