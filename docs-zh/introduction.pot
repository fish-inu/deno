# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-11-19 16:18+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: docs/introduction.md:2
msgid "# Introduction"
msgstr ""

#. type: Plain text
#: docs/introduction.md:5
msgid ""
"Deno is a JavaScript/TypeScript runtime with secure defaults and a great "
"developer experience."
msgstr ""

#. type: Plain text
#: docs/introduction.md:7
msgid "It's built on V8, Rust, and Tokio."
msgstr ""

#. type: Plain text
#: docs/introduction.md:9
msgid "## Feature Highlights"
msgstr ""

#. type: Bullet: '- '
#: docs/introduction.md:21
msgid ""
"Secure by default. No file, network, or environment access (unless "
"explicitly enabled)."
msgstr ""

#. type: Bullet: '- '
#: docs/introduction.md:21
msgid "Supports TypeScript out of the box."
msgstr ""

#. type: Bullet: '- '
#: docs/introduction.md:21
msgid "Ships a single executable (`deno`)."
msgstr ""

#. type: Bullet: '- '
#: docs/introduction.md:21
msgid ""
"Has built-in utilities like a dependency inspector (`deno info`) and a code "
"formatter (`deno fmt`)."
msgstr ""

#. type: Bullet: '- '
#: docs/introduction.md:21
msgid ""
"Has [a set of reviewed (audited) standard "
"modules](https://github.com/denoland/deno/tree/master/std) that are "
"guaranteed to work with Deno."
msgstr ""

#. type: Bullet: '- '
#: docs/introduction.md:21
msgid "Scripts can be bundled into a single JavaScript file."
msgstr ""

#. type: Plain text
#: docs/introduction.md:23
msgid "## Philosophy"
msgstr ""

#. type: Plain text
#: docs/introduction.md:26
msgid ""
"Deno aims to be a productive and secure scripting environment for the modern "
"programmer."
msgstr ""

#. type: Plain text
#: docs/introduction.md:32
msgid ""
"Deno will always be distributed as a single executable. Given a URL to a "
"Deno program, it is runnable with nothing more than [the ~15 megabyte zipped "
"executable](https://github.com/denoland/deno/releases).  Deno explicitly "
"takes on the role of both runtime and package manager. It uses a standard "
"browser-compatible protocol for loading modules: URLs."
msgstr ""

#. type: Plain text
#: docs/introduction.md:35
msgid ""
"Among other things, Deno is a great replacement for utility scripts that may "
"have been historically written with bash or python."
msgstr ""

#. type: Plain text
#: docs/introduction.md:37
msgid "## Goals"
msgstr ""

#. type: Bullet: '- '
#: docs/introduction.md:49
msgid "Only ship a single executable (`deno`)."
msgstr ""

#. type: Plain text
#: docs/introduction.md:49
#, no-wrap
msgid ""
"- Provide Secure Defaults.\n"
"  - Unless specifically allowed, scripts can't access files, the "
"environment, or\n"
"    the network.\n"
"- Browser compatible: The subset of Deno programs which are written "
"completely\n"
"  in JavaScript and do not use the global `Deno` namespace (or feature test "
"for\n"
"  it), ought to also be able to be run in a modern web browser without "
"change.\n"
"- Provide built-in tooling like unit testing, code formatting, and linting "
"to\n"
"  improve developer experience.\n"
"- Does not leak V8 concepts into user land.\n"
"- Be able to serve HTTP efficiently.\n"
msgstr ""

#. type: Plain text
#: docs/introduction.md:51
msgid "## Comparison to Node.js"
msgstr ""

#. type: Plain text
#: docs/introduction.md:61
#, no-wrap
msgid ""
"- Deno does not use `npm`.\n"
"  - It uses modules referenced as URLs or file paths.\n"
"- Deno does not use `package.json` in its module resolution algorithm.\n"
"- All async actions in Deno return a promise. Thus Deno provides different "
"APIs\n"
"  than Node.\n"
"- Deno requires explicit permissions for file, network, and environment "
"access.\n"
"- Deno always dies on uncaught errors.\n"
"- Uses \"ES Modules\" and does not support `require()`. Third party modules "
"are\n"
"  imported via URLs:\n"
msgstr ""

#. type: Plain text
#: docs/introduction.md:65
#, no-wrap
msgid ""
"  ```javascript\n"
"  import * as log from \"https://deno.land/std@$STD_VERSION/log/mod.ts\";\n"
"  ```\n"
msgstr ""

#. type: Plain text
#: docs/introduction.md:67
msgid "## Other key behaviors"
msgstr ""

#. type: Bullet: '- '
#: docs/introduction.md:72
msgid ""
"Remote code is fetched and cached on first execution, and never updated "
"until the code is run with the `--reload` flag. (So, this will still work on "
"an airplane.)"
msgstr ""

#. type: Bullet: '- '
#: docs/introduction.md:72
msgid ""
"Modules/files loaded from remote URLs are intended to be immutable and "
"cacheable."
msgstr ""
