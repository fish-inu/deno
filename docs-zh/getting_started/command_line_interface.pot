# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-11-19 16:18+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:2
msgid "## Command line interface"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:6
msgid ""
"Deno is a command line program. You should be familiar with some simple "
"commands having followed the examples thus far and already understand the "
"basics of shell usage."
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:8
msgid "There are multiple ways of viewing the main help text:"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:12
msgid "```shell # Using the subcommand.  deno help"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:15
msgid "# Using the short flag -- outputs the same as above.  deno -h"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:19
msgid ""
"# Using the long flag -- outputs more detailed help text where available.  "
"deno --help ```"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:23
msgid ""
"Deno's CLI is subcommand-based. The above commands should show you a list of "
"those supported, such as `deno bundle`. To see subcommand-specific help for "
"`bundle`, you can similarly run one of:"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:29
msgid "```shell deno help bundle deno bundle -h deno bundle --help ```"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:31
msgid "Detailed guides to each subcommand can be found [here](../tools.md)."
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:33
msgid "### Script source"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:37
msgid ""
"Deno can grab the scripts from multiple sources, a filename, a url, and '-' "
"to read the file from stdin. The last is useful for integration with other "
"applications."
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:43
msgid ""
"```shell deno run main.ts deno run https://mydomain.com/main.ts cat main.ts "
"| deno run - ```"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:45
msgid "### Script arguments"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:48
msgid ""
"Separately from the Deno runtime flags, you can pass user-space arguments to "
"the script you are running by specifying them after the script name:"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:52
msgid "```shell deno run main.ts a b -c --quiet ```"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:57
msgid ""
"```ts // main.ts console.log(Deno.args); // [ \"a\", \"b\", \"-c\", "
"\"--quiet\" ] ```"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:61
#, no-wrap
msgid ""
"**Note that anything passed after the script name will be passed as a "
"script\n"
"argument and not consumed as a Deno runtime flag.** This leads to the "
"following\n"
"pitfall:\n"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:65
msgid ""
"```shell # Good. We grant net permission to net_client.ts.  deno run "
"--allow-net net_client.ts"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:69
msgid ""
"# Bad! --allow-net was passed to Deno.args, throws a net permission error.  "
"deno run net_client.ts --allow-net ```"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:71
msgid "Some see it as unconventional that:"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:73
msgid "> a non-positional flag is parsed differently depending on its position."
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:75
msgid "However:"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:84
#, no-wrap
msgid ""
"1. This is the most logical way of distinguishing between runtime flags "
"and\n"
"   script arguments.\n"
"2. This is the most ergonomic way of distinguishing between runtime flags "
"and\n"
"   script arguments.\n"
"3. This is, in fact, the same behaviour as that of any other popular "
"runtime.\n"
"   - Try `node -c index.js` and `node index.js -c`. The first will only do "
"a\n"
"     syntax check on `index.js` as per Node's `-c` flag. The second will\n"
"     _execute_ `index.js` with `-c` passed to `require(\"process\").argv`.\n"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:85
#, no-wrap
msgid "---\n"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:89
msgid ""
"There exist logical groups of flags that are shared between related "
"subcommands.  We discuss these below."
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:91
msgid "### Watch mode"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:96
msgid ""
"You can supply the `--watch` flag to `deno run` to enable the built in file "
"watcher. When Deno starts up with this flag it watches the entrypoint, and "
"all local files the entrypoint statically imports. Whenever one of these "
"files is changed on disk, the program will automatically be restarted."
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:98
msgid "### Integrity flags"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:101
msgid ""
"Affect commands which can download resources to the cache: `deno cache`, "
"`deno run` and `deno test`."
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:106
#, no-wrap
msgid ""
"```\n"
"--lock <FILE>    Check the specified lock file\n"
"--lock-write     Write lock file. Use with --lock.\n"
"```\n"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:109
msgid ""
"Find out more about these "
"[here](../linking_to_external_code/integrity_checking.md)."
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:111
msgid "### Cache and compilation flags"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:115
msgid ""
"Affect commands which can populate the cache: `deno cache`, `deno run` and "
"`deno test`. As well as the flags above this includes those which affect "
"module resolution, compilation configuration etc."
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:123
#, no-wrap
msgid ""
"```\n"
"--config <FILE>               Load tsconfig.json configuration file\n"
"--import-map <FILE>           UNSTABLE: Load import map file\n"
"--no-remote                   Do not resolve remote modules\n"
"--reload=<CACHE_BLOCKLIST>    Reload source code cache (recompile "
"TypeScript)\n"
"--unstable                    Enable unstable APIs\n"
"```\n"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:125
msgid "### Runtime flags"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:128
msgid ""
"Affect commands which execute user code: `deno run` and `deno test`. These "
"include all of the above as well as the following."
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:130
msgid "#### Permission flags"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:132
msgid "These are listed [here](./permissions.md#permissions-list)."
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:134
msgid "#### Other runtime flags"
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:136
msgid "More flags which affect the execution environment."
msgstr ""

#. type: Plain text
#: docs/getting_started/command_line_interface.md:143
#, no-wrap
msgid ""
"```\n"
"--cached-only                Require that remote dependencies are already "
"cached\n"
"--inspect=<HOST:PORT>        activate inspector on host:port ...\n"
"--inspect-brk=<HOST:PORT>    activate inspector on host:port and break at "
"...\n"
"--seed <NUMBER>              Seed Math.random()\n"
"--v8-flags=<v8-flags>        Set V8 command line options. For help: ...\n"
"```\n"
msgstr ""
