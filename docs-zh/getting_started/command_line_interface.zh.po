# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-11-25 21:33+0800\n"
"PO-Revision-Date: 2021-02-16 13:38+0000\n"
"Last-Translator: Weblate Admin <weblate.admin@example.com>\n"
"Language-Team: Chinese (Simplified) <http://weblate.example.com/projects/"
"deno-docs/command_line_interface/zh_Hans/>\n"
"Language: zh\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.3.2\n"

#. type: Title ##
#: docs/getting_started/command_line_interface.md:1
#, no-wrap
msgid "Command line interface"
msgstr "命令行接口"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:6
msgid ""
"Deno is a command line program. You should be familiar with some simple "
"commands having followed the examples thus far and already understand the "
"basics of shell usage."
msgstr "Deno 是命令行程序，而从之前的示例中学习到现在，你应该熟悉了简单的命令，也有了 shell 基础。"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:8
msgid "There are multiple ways of viewing the main help text:"
msgstr "查看主要帮助文档，有多种方法："

#. type: Fenced code block (shell)
#: docs/getting_started/command_line_interface.md:9
#, no-wrap
msgid ""
"# Using the subcommand.\n"
"deno help\n"
"\n"
"# Using the short flag -- outputs the same as above.\n"
"deno -h\n"
"\n"
"# Using the long flag -- outputs more detailed help text where available.\n"
"deno --help\n"
msgstr ""
"# 使用子命令。\n"
"deno help\n"
"\n"
"# 使用短选项 -- 与上等同。\n"
"deno -h\n"
"\n"
"# 使用长选项 -- 相比较更加详细。\n"
"deno --help\n"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:23
msgid ""
"Deno's CLI is subcommand-based. The above commands should show you a list of "
"those supported, such as `deno bundle`. To see subcommand-specific help for "
"`bundle`, you can similarly run one of:"
msgstr ""
"以上示例会显示子命令（如 `deno bundle`）。Deno CLI 由子命令构成，如果要查看某一子命令（如 `deno "
"bundle`）的帮助文档，你可以运行以下命令的其中一行："

#. type: Fenced code block (shell)
#: docs/getting_started/command_line_interface.md:24
#, no-wrap
msgid ""
"deno help bundle\n"
"deno bundle -h\n"
"deno bundle --help\n"
msgstr ""
"deno help bundle\n"
"deno bundle -h\n"
"deno bundle --help\n"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:31
msgid "Detailed guides to each subcommand can be found [here](../tools.md)."
msgstr "前往[此处](../tools.md)查看各个子命令的详细指南。"

#. type: Title ###
#: docs/getting_started/command_line_interface.md:32
#, no-wrap
msgid "Script source"
msgstr "脚本源"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:37
msgid ""
"Deno can grab the scripts from multiple sources, a filename, a url, and '-' "
"to read the file from stdin. The last is useful for integration with other "
"applications."
msgstr "Deno 脚本存在多种形式，可以是文件名，也可以是 url。它还可以是 '-'，从 stdin 读取文件，可用于与其它应用整合。"

#. type: Fenced code block (shell)
#: docs/getting_started/command_line_interface.md:38
#, no-wrap
msgid ""
"deno run main.ts\n"
"deno run https://mydomain.com/main.ts\n"
"cat main.ts | deno run -\n"
msgstr ""
"deno run main.ts\n"
"deno run https://mydomain.com/main.ts\n"
"cat main.ts | deno run -\n"

#. type: Title ###
#: docs/getting_started/command_line_interface.md:44
#, no-wrap
msgid "Script arguments"
msgstr "脚本参数"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:48
msgid ""
"Separately from the Deno runtime flags, you can pass user-space arguments to "
"the script you are running by specifying them after the script name:"
msgstr "除了 Deno 自带的标志，你还可以指定其它参数在脚本名之后，将它们传递到脚本中去："

#. type: Fenced code block (shell)
#: docs/getting_started/command_line_interface.md:49
#, no-wrap
msgid "deno run main.ts a b -c --quiet\n"
msgstr "deno run main.ts a b -c --quiet\n"

#. type: Fenced code block (ts)
#: docs/getting_started/command_line_interface.md:53
#, no-wrap
msgid ""
"// main.ts\n"
"console.log(Deno.args); // [ \"a\", \"b\", \"-c\", \"--quiet\" ]\n"
msgstr ""
"// main.ts\n"
"console.log(Deno.args); // [ \"a\", \"b\", \"-c\", \"--quiet\" ]\n"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:61
#, no-wrap
msgid ""
"**Note that anything passed after the script name will be passed as a script\n"
"argument and not consumed as a Deno runtime flag.** This leads to the following\n"
"pitfall:\n"
msgstr "**请注意，脚本名后面是参数，Deno 不会把它们当作是运行时标志。**这就会有以下隐患：\n"

#. type: Fenced code block (shell)
#: docs/getting_started/command_line_interface.md:62
#, no-wrap
msgid ""
"# Good. We grant net permission to net_client.ts.\n"
"deno run --allow-net net_client.ts\n"
"\n"
"# Bad! --allow-net was passed to Deno.args, throws a net permission error.\n"
"deno run net_client.ts --allow-net\n"
msgstr ""
"# 正确。我们给 net_client.ts 授予了网络权限。\n"
"deno run --allow-net net_client.ts\n"
"\n"
"# 错误！我们将 --allow-net 传递给了 Deno.args，这会抛出网络权限错误。\n"
"deno run net_client.ts --allow-net\n"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:71
msgid "Some see it as unconventional that:"
msgstr "有人不习惯这样，觉得："

#. type: Plain text
#: docs/getting_started/command_line_interface.md:73
#, no-wrap
msgid "> a non-positional flag is parsed differently depending on its position.\n"
msgstr "> 非位置参数竟然因位置不同而导致解析方式不同。\n"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:75
msgid "However:"
msgstr "然而："

#. type: Bullet: '1. '
#: docs/getting_started/command_line_interface.md:84
msgid ""
"This is the most logical way of distinguishing between runtime flags and "
"script arguments."
msgstr "对于区分运行时参数和脚本参数，这种方式最合理。"

#. type: Bullet: '2. '
#: docs/getting_started/command_line_interface.md:84
msgid ""
"This is the most ergonomic way of distinguishing between runtime flags and "
"script arguments."
msgstr "对于区分运行时参数和脚本参数，这种方式提供最佳开发者体验。"

#. type: Bullet: '3. '
#: docs/getting_started/command_line_interface.md:84
msgid ""
"This is, in fact, the same behaviour as that of any other popular runtime."
msgstr "实际上，其它常用运行时也采用了这种方式。"

#. type: Bullet: '   - '
#: docs/getting_started/command_line_interface.md:84
msgid ""
"Try `node -c index.js` and `node index.js -c`. The first will only do a "
"syntax check on `index.js` as per Node's `-c` flag. The second will "
"_execute_ `index.js` with `-c` passed to `require(\"process\").argv`."
msgstr ""
"试试对比 `node -c index.js` 和 `node index.js -c`。前者会按照 Node 的 `-c` 标志来对 `index."
"js` 做语法检查，而后者会将 `-c` 传递给 `require(\"process\").argv`，并_执行_ `index.js`。"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:89
msgid ""
"There exist logical groups of flags that are shared between related "
"subcommands.  We discuss these below."
msgstr "我们接下来会讨论一些标志，它们可用于 Deno 相关的子命令。"

#. type: Title ###
#: docs/getting_started/command_line_interface.md:90
#, no-wrap
msgid "Watch mode"
msgstr "监听模式"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:96
msgid ""
"You can supply the `--watch` flag to `deno run` to enable the built in file "
"watcher. When Deno starts up with this flag it watches the entrypoint, and "
"all local files the entrypoint statically imports. Whenever one of these "
"files is changed on disk, the program will automatically be restarted."
msgstr ""
"你可以给 `deno run` 添加 `--watch` 标志来启用内置文件监听器。这样，程序运行时，Deno 会监听入口起点（entry "
"point）和该起点导入的本地文件。这些文件变化后，程序会自动重启。"

#. type: Title ###
#: docs/getting_started/command_line_interface.md:97
#, no-wrap
msgid "Integrity flags"
msgstr "完整性标志"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:101
msgid ""
"Affect commands which can download resources to the cache: `deno cache`, "
"`deno run` and `deno test`."
msgstr "涉及的命令有：`deno cache`、`deno run` 和 `deno test`。这些命令用于下载资源到缓存中。"

#. type: Fenced code block
#: docs/getting_started/command_line_interface.md:102
#, no-wrap
msgid ""
"--lock <FILE>    Check the specified lock file\n"
"--lock-write     Write lock file. Use with --lock.\n"
msgstr ""
"--lock <FILE>    使用指定锁文件\n"
"--lock-write     与 --lock 搭配使用，用于写入锁文件。\n"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:109
msgid ""
"Find out more about these [here](../linking_to_external_code/"
"integrity_checking.md)."
msgstr "详情参见[这里](../linking_to_external_code/integrity_checking.md)。"

#. type: Title ###
#: docs/getting_started/command_line_interface.md:110
#, no-wrap
msgid "Cache and compilation flags"
msgstr "缓存和编译标志"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:115
msgid ""
"Affect commands which can populate the cache: `deno cache`, `deno run` and "
"`deno test`. As well as the flags above this includes those which affect "
"module resolution, compilation configuration etc."
msgstr ""
"涉及的命令有：`deno cache`、`deno run` 和 `deno test`，这些命令用于填充缓存。此外还有标志会涉及模块解析和编译配置等等。"

#. type: Fenced code block
#: docs/getting_started/command_line_interface.md:116
#, no-wrap
msgid ""
"--config <FILE>               Load tsconfig.json configuration file\n"
"--import-map <FILE>           UNSTABLE: Load import map file\n"
"--no-remote                   Do not resolve remote modules\n"
"--reload=<CACHE_BLOCKLIST>    Reload source code cache (recompile TypeScript)\n"
"--unstable                    Enable unstable APIs\n"
msgstr ""
"--config <FILE>               载入 tsconfig.json\n"
"--import-map <FILE>           （不稳定）载入 import map 文件\n"
"--no-remote                   不解析云端模块\n"
"--reload=<CACHE_BLOCKLIST>    重新加载缓存（重新编译 TypeScript）\n"
"--unstable                    启用不稳定 API\n"

#. type: Title ###
#: docs/getting_started/command_line_interface.md:124
#, no-wrap
msgid "Runtime flags"
msgstr "运行时标志"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:128
msgid ""
"Affect commands which execute user code: `deno run` and `deno test`. These "
"include all of the above as well as the following."
msgstr "涉及的命令有 `deno run` 和 `deno test`，这些命令用于运行代码。以上和以下标志都属于运行时标志。"

#. type: Title ####
#: docs/getting_started/command_line_interface.md:129
#, no-wrap
msgid "Permission flags"
msgstr "权限标志"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:132
msgid "These are listed [here](./permissions.md#permissions-list)."
msgstr "前往[此处](./permissions.md#permissions-list)查看权限标志列表。"

#. type: Title ####
#: docs/getting_started/command_line_interface.md:133
#, no-wrap
msgid "Other runtime flags"
msgstr "其它运行时标志"

#. type: Plain text
#: docs/getting_started/command_line_interface.md:136
msgid "More flags which affect the execution environment."
msgstr "以下标志涉及执行环境。"

#. type: Fenced code block
#: docs/getting_started/command_line_interface.md:137
#, no-wrap
msgid ""
"--cached-only                Require that remote dependencies are already cached\n"
"--inspect=<HOST:PORT>        activate inspector on host:port ...\n"
"--inspect-brk=<HOST:PORT>    activate inspector on host:port and break at ...\n"
"--seed <NUMBER>              Seed Math.random()\n"
"--v8-flags=<v8-flags>        Set V8 command line options. For help: ...\n"
msgstr ""
"--cached-only                要求以云端依赖已缓存为前提\n"
"--inspect=<HOST:PORT>        在 主机:端口启用检查器\n"
"--inspect-brk=<HOST:PORT>    在 主机:端口启用检查器，并设置断点\n"
"--seed <NUMBER>              选取 Math.random() 的种子值\n"
"--v8-flags=<v8-flags>        配置 V8 命令行\n"
