# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-11-25 21:33+0800\n"
"PO-Revision-Date: 2020-11-25 15:43+0000\n"
"Last-Translator: Weblate Admin <weblate.admin@example.com>\n"
"Language-Team: Chinese (Simplified) <http://weblate.example.com/projects/"
"deno-docs/setup_your_environment/zh_Hans/>\n"
"Language: zh\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.3.2\n"

#. type: Title ##
#: docs/getting_started/setup_your_environment.md:1
#, no-wrap
msgid "Set up your environment"
msgstr "搭建环境"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:6
msgid ""
"To productively get going with Deno you should set up your environment. This "
"means setting up shell autocomplete, environmental variables and your editor "
"or IDE of choice."
msgstr ""
"如果想高效使用 Deno，就得搭建环境，包括配置 shell 自动补全和环境变量，选择并"
"设置编辑器或 IDE（集成开发环境）。"

#. type: Title ###
#: docs/getting_started/setup_your_environment.md:7
#, no-wrap
msgid "Environmental variables"
msgstr "环境变量"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:10
msgid "There are several env vars that control how Deno behaves:"
msgstr "以下环境变量用于设置 Deno："

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:13
#, fuzzy
msgid ""
"`DENO_DIR` defaults to `$HOME/.cache/deno` but can be set to any path to "
"control where generated and cached source code is written and read to."
msgstr ""
"`DENO_DIR` 默认值为 `$HOME/.cache/deno`。你还可以设置其它路径来指定源码读取和"
"写入的位置。"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:17
msgid ""
"`NO_COLOR` will turn off color output if set. See https://no-color.org/. "
"User code can test if `NO_COLOR` was set without having `--allow-env` by "
"using the boolean constant `Deno.noColor`."
msgstr ""
"`NO_COLOR` 用于设置语法高亮，详情参见 https://no-color.org/。你可以访问 "
"`Deno.noColor` 来检查是否设置 `NO_COLOR`。"

#. type: Title ###
#: docs/getting_started/setup_your_environment.md:18
#, no-wrap
msgid "Shell autocomplete"
msgstr "Shell 自动补全"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:23
#, no-wrap
msgid ""
"You can generate completion script for your shell using the\n"
"`deno completions <shell>` command. The command outputs to stdout so you should\n"
"redirect it to an appropriate file.\n"
msgstr "输入指令 `deno completions <shell>`，生成自动补全脚本，不过该输出发送到了标准输出，需要重定向到文件中。\n"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:25
msgid "The supported shells are:"
msgstr "该命令支持以下 shell："

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:31
msgid "- zsh - bash - fish - powershell - elvish"
msgstr "- zsh - bash - fish - powershell - elvish"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:33
msgid "Example (bash):"
msgstr "示例（bash）："

#. type: Fenced code block (shell)
#: docs/getting_started/setup_your_environment.md:34
#, no-wrap
msgid ""
"deno completions bash > /usr/local/etc/bash_completion.d/deno.bash\n"
"source /usr/local/etc/bash_completion.d/deno.bash\n"
msgstr ""
"deno completions bash > /usr/local/etc/bash_completion.d/deno.bash\n"
"source /usr/local/etc/bash_completion.d/deno.bash\n"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:40
msgid "Example (zsh without framework):"
msgstr "示例（未使用框架的 zsh）："

#. type: Fenced code block (shell)
#: docs/getting_started/setup_your_environment.md:41
#, no-wrap
msgid ""
"mkdir ~/.zsh # create a folder to save your completions. it can be anywhere\n"
"deno completions zsh > ~/.zsh/_deno\n"
msgstr ""
"mkdir ~/.zsh # create a folder to save your completions. it can be anywhere\n"
"deno completions zsh > ~/.zsh/_deno\n"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:47
msgid "then add this to your `.zshrc`"
msgstr "之后，添加如下代码到 `.zshrc`"

#. type: Fenced code block (shell)
#: docs/getting_started/setup_your_environment.md:48
#, no-wrap
msgid ""
"fpath=(~/.zsh $fpath)\n"
"autoload -Uz compinit\n"
"compinit -u\n"
msgstr ""
"fpath=(~/.zsh $fpath)\n"
"autoload -Uz compinit\n"
"compinit -u\n"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:57
msgid ""
"and restart your terminal. note that if completions are still not loading, "
"you may need to run `rm ~/.zcompdump/` to remove previously generated "
"completions and then `compinit` to generate them again."
msgstr ""
"最后，重启终端。注意，如果自动补全没有加载，你可能得运行 `rm ~/.zcompdump/` "
"来删除之前生成的自动补全脚本，再运行 `compinit` 来重新生成自动补全脚本。"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:59
msgid "Example (zsh + oh-my-zsh) [recommended for zsh users] :"
msgstr "示例（zsh + oh-my-zsh）[推荐 zsh 用户使用]："

#. type: Fenced code block (shell)
#: docs/getting_started/setup_your_environment.md:60
#, no-wrap
msgid ""
"mkdir ~/.oh-my-zsh/custom/plugins/deno\n"
"deno completions zsh > ~/.oh-my-zsh/custom/plugins/deno/_deno\n"
msgstr ""
"mkdir ~/.oh-my-zsh/custom/plugins/deno\n"
"deno completions zsh > ~/.oh-my-zsh/custom/plugins/deno/_deno\n"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:68
msgid ""
"After this add deno plugin under plugins tag in `~/.zshrc` file. for tools "
"like `antigen` path will be `~/.antigen/bundles/robbyrussell/oh-my-zsh/"
"plugins` and command will be `antigen bundle deno` and so on."
msgstr ""
"之后，添加 deno 到 `~/.zshrc` 的 plugins 数组内。如果你用的工具是 `antigen`，"
"插件对应路径就是 `~/.antigen/bundles/robbyrussell/oh-my-zsh/plugins`，之后运"
"行的命令是 `antigen bundle deno`。"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:70
msgid "Example (Powershell):"
msgstr "示例（Powershell）："

#. type: Fenced code block (shel)
#: docs/getting_started/setup_your_environment.md:71
#, no-wrap
msgid ""
"deno completions powershell > $profile\n"
".$profile\n"
msgstr ""
"deno completions powershell > $profile\n"
".$profile\n"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:79
msgid ""
"This will be create a Powershell profile at `$HOME\\Documents"
"\\WindowsPowerShell\\Microsoft.PowerShell_profile.ps1` by default, and it "
"will be run whenever you launch the PowerShell."
msgstr ""
"默认情况下，以上代码会生成 `$HOME\\Documents\\WindowsPowerShell\\Microsoft."
"PowerShell_profile.ps1`。每次启动 PowerShell 时，该文件都会运行。"

#. type: Title ###
#: docs/getting_started/setup_your_environment.md:80
#, no-wrap
msgid "Editors and IDEs"
msgstr "编辑器和 IDE"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:86
msgid ""
"Because Deno requires the use of file extensions for module imports and "
"allows http imports, and most editors and language servers do not natively "
"support this at the moment, many editors will throw errors about being "
"unable to find files or imports having unnecessary file extensions."
msgstr ""
"Deno 导入模块时，要求包括文件扩展名，同时还可以通过 http 导入模块，然而大部分"
"编辑器和语言服务器还没有原生支持这些功能，其中许多编辑器对此会抛出错误，称不"
"能解析文件，或者称导入的模块有多余文件扩展名。"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:88
msgid ""
"The community has developed extensions for some editors to solve these "
"issues:"
msgstr "针对一些编辑器，社区已开发出了扩展程序来解决这些问题："

#. type: Title ####
#: docs/getting_started/setup_your_environment.md:89
#, no-wrap
msgid "VS Code"
msgstr "VS Code"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:95
msgid ""
"The beta version of [vscode_deno](https://github.com/denoland/vscode_deno) "
"is published on the [Visual Studio Marketplace](https://marketplace."
"visualstudio.com/items?itemName=denoland.vscode-deno).  Please report any "
"issues."
msgstr ""
"[vscode_deno](https://github.com/denoland/vscode_deno) 的 beta 版本发布在了 "
"[Visual Studio Marketplace](https://marketplace.visualstudio.com/items?"
"itemName=denoland.vscode-deno)。如有问题，请提交 issue。"

#. type: Title ####
#: docs/getting_started/setup_your_environment.md:96
#, no-wrap
msgid "JetBrains IDEs"
msgstr "JetBrains IDEs"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:100
msgid ""
"Support for JetBrains IDEs is available through [the Deno plugin](https://"
"plugins.jetbrains.com/plugin/14382-deno)."
msgstr ""
"[此插件](https://plugins.jetbrains.com/plugin/14382-deno) 支持 JetBrains "
"IDE。"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:104
msgid ""
"For more information on how to set-up your JetBrains IDE for Deno, read "
"[this comment](https://youtrack.jetbrains.com/issue/"
"WEB-41607#focus=streamItem-27-4160152.0-0)  on YouTrack."
msgstr ""
"详情参见 [此评论](https://youtrack.jetbrains.com/issue/"
"WEB-41607#focus=streamItem-27-4160152.0-0) 来给 Deno 配置 JetBrains IDE。"

#. type: Title ####
#: docs/getting_started/setup_your_environment.md:105
#, no-wrap
msgid "Vim and NeoVim"
msgstr "Vim 和 NeoVim"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:110
msgid ""
"Vim works fairly well for Deno/TypeScript if you install [CoC](https://"
"github.com/neoclide/coc.nvim) (intellisense engine and language server "
"protocol)."
msgstr ""
"[CoC](https://github.com/neoclide/coc.nvim) 应用了 intellisense 引擎和语言服"
"务器协议，使 Vim 支持 Deno/TypeScript，效果还不错。"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:116
msgid ""
"After CoC is installed, from inside Vim, run`:CocInstall coc-tsserver` and `:"
"CocInstall coc-deno`. To get autocompletion working for Deno type "
"definitions run `:CocCommand deno.types`. Optionally restart the CoC server "
"`:CocRestart`.  From now on, things like `gd` (go to definition) and `gr` "
"(goto/find references)  should work."
msgstr ""
"安装好 CoC 后，启动 Vim，运行 `:CocInstall coc-tsserver` 和 `:CocInstall coc-"
"deno`。对于 Deno 类型定义的自动补全，运行 `:CocCommand deno.types` 来启动该功"
"能。之后，你可以选择重启 Coc 服务器 `:CocRestart`。最后，比如 `gd`（go to "
"definition）和 `gr`（goto/find references）的指令应该就对 Deno 有效了。"

#. type: Title ####
#: docs/getting_started/setup_your_environment.md:117
#, no-wrap
msgid "Emacs"
msgstr "Emacs"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:125
msgid ""
"Emacs works pretty well for a TypeScript project targeted to Deno by using a "
"combination of [tide](https://github.com/ananthakumaran/tide) which is the "
"canonical way of using TypeScript within Emacs and [typescript-deno-plugin]"
"(https://github.com/justjavac/typescript-deno-plugin)  which is what is used "
"by the [official VSCode extension for Deno](https://github.com/denoland/"
"vscode_deno)."
msgstr ""
"[tide](https://github.com/ananthakumaran/tide) 是用 Emacs 编写 TypeScript 代"
"码的官方工具。[typescript-deno-plugin](https://github.com/justjavac/"
"typescript-deno-plugin) 由[官方 VSCode Deno 扩展程序](https://github.com/"
"denoland/vscode_deno)使用。Emacs 整合了这两个工具，在使用了 Deno 的 "
"TypeScript 项目上表现不错。"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:132
msgid ""
"To use it, first make sure that `tide` is setup for your instance of Emacs.  "
"Next, as instructed on the [typescript-deno-plugin](https://github.com/"
"justjavac/typescript-deno-plugin)  page, first `npm install --save-dev "
"typescript-deno-plugin typescript` in your project (`npm init -y` as "
"necessary), then add the following block to your `tsconfig.json` and you are "
"off to the races!"
msgstr ""
"首先确保已给 Emacs 配置好 `tide`。然后，运行 `npm init -y`来初始化项目，按照 "
"[typescript-deno-plugin](https://github.com/justjavac/typescript-deno-"
"plugin) 给的步骤，先运行 `npm install --save-dev typescript-deno-plugin "
"typescript`，之后添加以下代码到 `tsconfig.json`："

#. type: Fenced code block (json)
#: docs/getting_started/setup_your_environment.md:133
#, no-wrap
msgid ""
"{\n"
"  \"compilerOptions\": {\n"
"    \"plugins\": [\n"
"      {\n"
"        \"name\": \"typescript-deno-plugin\",\n"
"        \"enable\": true, // default is `true`\n"
"        \"importmap\": \"import_map.json\"\n"
"      }\n"
"    ]\n"
"  }\n"
"}\n"
msgstr ""
"{\n"
"  \"compilerOptions\": {\n"
"    \"plugins\": [\n"
"      {\n"
"        \"name\": \"typescript-deno-plugin\",\n"
"        \"enable\": true, // default is `true`\n"
"        \"importmap\": \"import_map.json\"\n"
"      }\n"
"    ]\n"
"  }\n"
"}\n"

#. type: Plain text
#: docs/getting_started/setup_your_environment.md:149
msgid ""
"If you don't see your favorite IDE on this list, maybe you can develop an "
"extension. Our [community Discord group](https://discord.gg/deno) can give "
"you some pointers on where to get started."
msgstr ""
"如果你钟爱的 IDE 没有出现在以上列表，或许你可以开发出对应扩展程序。我们在 "
"[Discord](https://discord.gg/deno) 上可以为你提供一些建议，提示你从哪开始。"
