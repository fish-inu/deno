# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2020-11-23 14:22+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: docs/tools/linter.md:2
msgid "## Linter"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:4
msgid "Deno ships with a built in code linter for JavaScript and TypeScript."
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:7
#, no-wrap
msgid ""
"**Note: linter is a new feature and still unstable thus it requires "
"`--unstable`\n"
"flag**\n"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:18
msgid ""
"```shell # lint all JS/TS files in the current directory and subdirectories "
"deno lint --unstable # lint specific files deno lint --unstable myfile1.ts "
"myfile2.ts # print result as JSON deno lint --unstable --json # read from "
"stdin cat file.ts | deno lint --unstable - ```"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:20
msgid "For more detail, run `deno lint --help`."
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:22
msgid "### Available rules"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:88
msgid ""
"- `adjacent-overload-signatures` - `ban-ts-comment` - `ban-types` - "
"`ban-untagged-ignore` - `constructor-super` - `for-direction` - "
"`getter-return` - `no-array-constructor` - `no-async-promise-executor` - "
"`no-case-declarations` - `no-class-assign` - `no-compare-neg-zero` - "
"`no-cond-assign` - `no-constant-condition` - `no-control-regex` - "
"`no-debugger` - `no-delete-var` - `no-dupe-args` - `no-dupe-class-members` - "
"`no-dupe-else-if` - `no-dupe-keys` - `no-duplicate-case` - `no-empty` - "
"`no-empty-character-class` - `no-empty-interface` - `no-empty-pattern` - "
"`no-ex-assign` - `no-explicit-any` - `no-extra-boolean-cast` - "
"`no-extra-non-null-assertion` - `no-extra-semi` - `no-fallthrough` - "
"`no-func-assign` - `no-global-assign` - `no-import-assign` - "
"`no-inferrable-types` - `no-inner-declarations` - `no-invalid-regexp` - "
"`no-irregular-whitespace` - `no-misused-new` - `no-mixed-spaces-and-tabs` - "
"`no-namespace` - `no-new-symbol` - `no-obj-calls` - `no-octal` - "
"`no-prototype-builtins` - `no-redeclare` - `no-regex-spaces` - "
"`no-self-assign` - `no-setter-return` - `no-shadow-restricted-names` - "
"`no-this-alias` - `no-this-before-super` - `no-undef` - `no-unreachable` - "
"`no-unsafe-finally` - `no-unsafe-negation` - `no-unused-labels` - `no-with` "
"- `prefer-as-const` - `prefer-namespace-keyword` - `require-yield` - "
"`triple-slash-reference` - `use-isnan` - `valid-typeof`"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:90
msgid "### Ignore directives"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:92
msgid "#### Files"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:95
msgid ""
"To ignore whole file `// deno-lint-ignore-file` directive should placed at "
"the top of the file:"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:98
msgid "```ts // deno-lint-ignore-file"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:103 docs/tools/linter.md:121 docs/tools/linter.md:131
#, no-wrap
msgid ""
"function foo(): any {\n"
"  // ...\n"
"}\n"
"```\n"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:105
msgid "Ignore directive must be placed before first stament or declaration:"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:108
msgid "```ts // Copyright 2020 the Deno authors. All rights reserved. MIT license."
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:112
#, no-wrap
msgid ""
"/**\n"
" * Some JS doc\n"
" **/\n"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:114
msgid "// deno-lint-ignore-file"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:116
msgid "import { bar } from \"./bar.js\";"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:123
msgid "You can also ignore certain diagnostics in the whole file"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:126
msgid "```ts // deno-lint-ignore-file no-explicit-any no-empty"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:133
msgid "#### Diagnostics"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:136
msgid ""
"To ignore certain diagnostic `// deno-lint-ignore <codes...>` directive "
"should be placed before offending line. Specifying ignored rule name is "
"required:"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:142
#, no-wrap
msgid ""
"```ts\n"
"// deno-lint-ignore no-explicit-any\n"
"function foo(): any {\n"
"  // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: docs/tools/linter.md:147
#, no-wrap
msgid ""
"// deno-lint-ignore no-explicit-any explicit-function-return-type\n"
"function bar(a: any) {\n"
"  // ...\n"
"}\n"
"```\n"
msgstr ""
